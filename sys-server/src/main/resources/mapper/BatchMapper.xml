<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.deskie.sysserver.mapper.BatchMapper">
  <resultMap id="BaseResultMap" type="cn.deskie.sysentity.entity.Batch">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="batch_no" jdbcType="INTEGER" property="batchNo" />
    <result column="referenceno" jdbcType="VARCHAR" property="referenceno" />
    <result column="batch_name" jdbcType="VARCHAR" property="batchName" />
    <result column="public_time" jdbcType="TIMESTAMP" property="publicTime" />
    <result column="page_url" jdbcType="VARCHAR" property="pageUrl" />
    <result column="attachment_url" jdbcType="VARCHAR" property="attachmentUrl" />
    <result column="attachment_name" jdbcType="VARCHAR" property="attachmentName" />
    <result column="is_downloaded" jdbcType="VARCHAR" property="isDownloaded" />
    <result column="is_resolved" jdbcType="VARCHAR" property="isResolved" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, batch_no, referenceno, batch_name, public_time, page_url, attachment_url, attachment_name,
    is_downloaded, is_resolved, add_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from batch
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from batch
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.deskie.sysentity.entity.Batch">
    insert into batch (id, batch_no, referenceno, batch_name,
      public_time, page_url, attachment_url, 
      attachment_name, is_downloaded, is_resolved, 
      add_time, update_time)
    values (#{id,jdbcType=VARCHAR}, #{batchNo,jdbcType=INTEGER}, #{referenceno,jdbcType=VARCHAR}, #{batchName,jdbcType=VARCHAR},
      #{publicTime,jdbcType=TIMESTAMP}, #{pageUrl,jdbcType=VARCHAR}, #{attachmentUrl,jdbcType=VARCHAR}, 
      #{attachmentName,jdbcType=VARCHAR}, #{isDownloaded,jdbcType=VARCHAR}, #{isResolved,jdbcType=VARCHAR}, 
      #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="cn.deskie.sysentity.entity.Batch">
    update batch
    <set>
      <if test="batchNo != null">
        batch_no = #{batchNo,jdbcType=INTEGER},
      </if>
      <if test="referenceno != null">
        referenceno = #{referenceno,jdbcType=VARCHAR},
      </if>
      <if test="batchName != null">
        batch_name = #{batchName,jdbcType=VARCHAR},
      </if>
      <if test="publicTime != null">
        public_time = #{publicTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pageUrl != null">
        page_url = #{pageUrl,jdbcType=VARCHAR},
      </if>
      <if test="attachmentUrl != null">
        attachment_url = #{attachmentUrl,jdbcType=VARCHAR},
      </if>
      <if test="attachmentName != null">
        attachment_name = #{attachmentName,jdbcType=VARCHAR},
      </if>
      <if test="isDownloaded != null">
        is_downloaded = #{isDownloaded,jdbcType=VARCHAR},
      </if>
      <if test="isResolved != null">
        is_resolved = #{isResolved,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.deskie.sysentity.entity.Batch">
    update batch
    set
      batch_no = #{batchNo,jdbcType=INTEGER},
      referenceno = #{referenceno,jdbcType=VARCHAR},
      batch_name = #{batchName,jdbcType=VARCHAR},
      public_time = #{publicTime,jdbcType=TIMESTAMP},
      page_url = #{pageUrl,jdbcType=VARCHAR},
      attachment_url = #{attachmentUrl,jdbcType=VARCHAR},
      attachment_name = #{attachmentName,jdbcType=VARCHAR},
      is_downloaded = #{isDownloaded,jdbcType=VARCHAR},
      is_resolved = #{isResolved,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="batchSave" parameterType="java.util.List" >
    insert into batch (id, batch_no, referenceno, batch_name,
      public_time, page_url, attachment_url,
      attachment_name, is_downloaded, is_resolved,
      add_time, update_time)
    values
    <foreach collection="list" separator="," item="batch">
      (#{batch.id,jdbcType=VARCHAR}, #{batch.batchNo,jdbcType=INTEGER},#{batch.referenceno,jdbcType=VARCHAR}, #{batch.batchName,jdbcType=VARCHAR},
      #{batch.publicTime,jdbcType=TIMESTAMP}, #{batch.pageUrl,jdbcType=VARCHAR}, #{batch.attachmentUrl,jdbcType=VARCHAR},
      #{batch.attachmentName,jdbcType=VARCHAR}, #{batch.isDownloaded,jdbcType=VARCHAR}, #{batch.isResolved,jdbcType=VARCHAR},
      #{batch.addTime,jdbcType=TIMESTAMP}, #{batch.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <select id="getMaxBatchNo" resultType="Integer">
    select ifnull(MAX(batch_no),'0') from batch
  </select>
  <select id="findByProperty" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM batch
    WHERE
    ${propertyName} = '${value}'
  </select>
</mapper>